{"version":3,"sources":["webpack://potree/webpack/bootstrap","webpack://potree/./src/workers/binary-decoder-worker.js","webpack://potree/./src/point-attributes.ts","webpack://potree/./src/version.ts","webpack://potree/./src/workers/custom-array-view.ts","webpack://potree/./src/workers/binary-decoder-worker-internal.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","onmessage","handleMessage","PointAttributeName","POINT_ATTRIBUTE_TYPES","ordinal","size","makePointAttribute","type","numElements","byteSize","RGBA_PACKED","COLOR_PACKED","POINT_ATTRIBUTES","POSITION_CARTESIAN","RGB_PACKED","NORMAL_FLOATS","FILLER_1B","FILLER","INTENSITY","CLASSIFICATION","NORMAL_SPHEREMAPPED","NORMAL_OCT16","NORMAL","pointAttributeNames","attributes","length","pointAttributeName","pointAttribute","this","push","add","hasColors","undefined","find","isColorAttribute","hasNormals","isNormalAttribute","version","versionMinor","vmLength","indexOf","versionMajor","parseInt","substr","isNaN","newerThan","v","Version","equalOrHigher","upTo","buffer","tmp","ArrayBuffer","tmpf","Float32Array","tmpu8","Uint8Array","u8","getUint32","getUint16","getFloat32","getUint8","mathSign","Math","sign","x","event","data","pointAttributes","ctx","attributeBuffers","currentOffset","CustomArrayView","mean","nodeOffset","offset","numPoints","byteLength","scale","tightBoxMax","Number","NEGATIVE_INFINITY","tightBoxMin","POSITIVE_INFINITY","transferables","decodeAndAddAttribute","indices","iIndices","Uint32Array","classifications","attribute","addEmptyClassificationBuffer","message","tightBoundingBox","min","max","postMessage","decodedAttribute","positions","y","z","decodePositionCartesian","colors","decodeColor","intensities","decodeIntensity","j","decodeClassification","normals","bx","by","nx","ny","nz","sqrt","decodeNormalSphereMapped","buff","u","abs","decodeNormalOct16","decodeNormal","decodePointAttribute"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,+BClFrD,WAGAC,UAAYC,iB,6BCCZ,IAAYC,E,OAAZ,SAAYA,GACV,+CACA,mCACA,uCACA,2CACA,qCACA,uBACA,6BACA,uCACA,iDACA,mCACA,wBAXF,CAAYA,MAAkB,KAmBvB,IAAMC,EAEM,CAAEC,QAAS,EAAGC,KAAM,GAF1BF,EAGK,CAAEC,QAAS,EAAGC,KAAM,GAHzBF,EAIM,CAAEC,QAAS,EAAGC,KAAM,GAJ1BF,EAMO,CAAEC,QAAS,EAAGC,KAAM,GAoBxC,SAASC,EACP/B,EACAgC,EACAC,GAEA,MAAO,CACLjC,KAAI,EACJgC,KAAI,EACJC,YAAW,EACXC,SAAUD,EAAcD,EAAKF,MAIjC,IAAMK,EAAcJ,EAClBJ,EAAmBS,aACnBR,EACA,GAGWS,EAAmB,CAC9BC,mBAAoBP,EAClBJ,EAAmBW,mBACnBV,EACA,GAEFO,YAAW,EACXC,aAAcD,EACdI,WAAYR,EACVJ,EAAmBS,aACnBR,EACA,GAEFY,cAAeT,EACbJ,EAAmBa,cACnBZ,EACA,GAEFa,UAAWV,EACTJ,EAAmBe,OACnBd,EACA,GAEFe,UAAWZ,EACTJ,EAAmBgB,UACnBf,EACA,GAEFgB,eAAgBb,EACdJ,EAAmBiB,eACnBhB,EACA,GAEFiB,oBAAqBd,EACnBJ,EAAmBkB,oBACnBjB,EACA,GAEFkB,aAAcf,EACZJ,EAAmBmB,aACnBlB,EACA,GAEFmB,OAAQhB,EAAmBJ,EAAmBoB,OAAQnB,EAAuC,KAK/F,WAKE,WAAYoB,QAAA,IAAAA,MAAA,IAJZ,KAAAC,WAAgC,GAChC,KAAAf,SAAmB,EACnB,KAAAJ,KAAe,EAGb,IAAK,IAAIrC,EAAI,EAAGA,EAAIuD,EAAoBE,OAAQzD,IAAK,CACnD,IAAM0D,EAAqBH,EAAoBvD,GACzC2D,EAAiBf,EAAiBc,GACxCE,KAAKJ,WAAWK,KAAKF,GACrBC,KAAKnB,UAAYkB,EAAelB,SAChCmB,KAAKvB,QAIT,YAAAyB,IAAA,SAAIH,GACFC,KAAKJ,WAAWK,KAAKF,GACrBC,KAAKnB,UAAYkB,EAAelB,SAChCmB,KAAKvB,QAGP,YAAA0B,UAAA,WACE,YAAkDC,IAA3CJ,KAAKJ,WAAWS,KAAKC,IAG9B,YAAAC,WAAA,WACE,YAAmDH,IAA5CJ,KAAKJ,WAAWS,KAAKG,IA1BhC,GA8BA,SAASF,EAAiB,GACxB,OAD0B,EAAA3D,OACV2B,EAAmBS,aAGrC,SAASyB,EAAkB,G,IAAE7D,EAAA,EAAAA,KAC3B,OACEA,IAAS2B,EAAmBkB,qBAC5B7C,IAAS2B,EAAmBa,eAC5BxC,IAAS2B,EAAmBoB,QAC5B/C,IAAS2B,EAAmBmB,aC3JhC,iBAKE,WAAYgB,GAFZ,KAAAC,aAAuB,EAGrBV,KAAKS,QAAUA,EAEf,IAAME,GAAqC,IAA1BF,EAAQG,QAAQ,KAAcH,EAAQZ,OAASY,EAAQG,QAAQ,KAChFZ,KAAKa,aAAeC,SAASL,EAAQM,OAAO,EAAGJ,GAAW,IAC1DX,KAAKU,aAAeI,SAASL,EAAQM,OAAOJ,EAAW,GAAI,IACvDK,MAAMhB,KAAKU,gBACbV,KAAKU,aAAe,GA+B1B,OA3BE,YAAAO,UAAA,SAAUR,GACR,IAAMS,EAAI,IAAIC,EAAQV,GAEtB,OAAIT,KAAKa,aAAeK,EAAEL,cAEfb,KAAKa,eAAiBK,EAAEL,cAAgBb,KAAKU,aAAeQ,EAAER,cAO3E,YAAAU,cAAA,SAAcX,GACZ,IAAMS,EAAI,IAAIC,EAAQV,GAEtB,OAAIT,KAAKa,aAAeK,EAAEL,cAEfb,KAAKa,eAAiBK,EAAEL,cAAgBb,KAAKU,cAAgBQ,EAAER,cAO5E,YAAAW,KAAA,SAAKZ,GACH,OAAQT,KAAKiB,UAAUR,IAE3B,EA3CA,GCOA,aAME,WAAYa,GAJJ,KAAAC,IAAM,IAAIC,YAAY,GACtB,KAAAC,KAAO,IAAIC,aAAa1B,KAAKuB,KAC7B,KAAAI,MAAQ,IAAIC,WAAW5B,KAAKuB,KAGlCvB,KAAK6B,GAAK,IAAID,WAAWN,GA2B7B,OAxBE,YAAAQ,UAAA,SAAU1F,GACR,OAAQ4D,KAAK6B,GAAGzF,EAAI,IAAM,GAAO4D,KAAK6B,GAAGzF,EAAI,IAAM,GAAO4D,KAAK6B,GAAGzF,EAAI,IAAM,EAAK4D,KAAK6B,GAAGzF,IAG3F,YAAA2F,UAAA,SAAU3F,GACR,OAAQ4D,KAAK6B,GAAGzF,EAAI,IAAM,EAAK4D,KAAK6B,GAAGzF,IAGzC,YAAA4F,WAAA,SAAW5F,GACT,IAAMuF,EAAQ3B,KAAK2B,MACbE,EAAK7B,KAAK6B,GACVJ,EAAOzB,KAAKyB,KAOlB,OALAE,EAAM,GAAKE,EAAGzF,EAAI,GAClBuF,EAAM,GAAKE,EAAGzF,EAAI,GAClBuF,EAAM,GAAKE,EAAGzF,EAAI,GAClBuF,EAAM,GAAKE,EAAGzF,EAAI,GAEXqF,EAAK,IAGd,YAAAQ,SAAA,SAAS7F,GACP,OAAO4D,KAAK6B,GAAGzF,IAEnB,EAlCA,GCPA,4CAeA,IAAM8F,EACJC,KAAKC,MACL,SAASC,GAEP,OAAmB,IAAXA,GAAKA,IAAWA,GAAKA,EAAIA,EAAIA,EAAI,GAAK,EAAI,GAuB/C,SAAShE,EAAciE,GAmB5B,IAlBA,IAAMhB,EAASgB,EAAMC,KAAKjB,OACpBkB,EAAoCF,EAAMC,KAAKC,gBAE/CC,EAAW,CACfC,iBAAkB,GAClBC,cAAe,EACfJ,KAAM,IAAIK,EAAgBtB,GAC1BuB,KAAM,CAAC,EAAG,EAAG,GACbC,WAAYR,EAAMC,KAAKQ,OACvBC,UAAWV,EAAMC,KAAKjB,OAAO2B,WAAaT,EAAgB3D,SAC1D2D,gBAAe,EACfU,MAAOZ,EAAMC,KAAKW,MAClBC,YAAa,CAACC,OAAOC,kBAAmBD,OAAOC,kBAAmBD,OAAOC,mBACzEC,YAAa,CAACF,OAAOG,kBAAmBH,OAAOG,kBAAmBH,OAAOG,mBACzEC,cAAe,GACf/C,QAAS,IAAIU,EAAQmB,EAAMC,KAAK9B,UAGL,MAAAgC,EAAID,gBAAgB5C,WAApB,eAAgC,CAAxD,IAAMG,EAAc,KACvB0D,EAAsB1D,EAAgB0C,GACtCA,EAAIE,eAAiB5C,EAAelB,SAKtC,IAFA,IAAM6E,EAAU,IAAIlC,YAA4B,EAAhBiB,EAAIO,WAC9BW,EAAW,IAAIC,YAAYF,GACxBtH,EAAI,EAAGA,EAAIqG,EAAIO,UAAW5G,IACjCuH,EAASvH,GAAKA,EAGXqG,EAAIC,iBAAiBpE,EAAmBiB,iBAe/C,SAAsCkD,GAIpC,IAHA,IAAMnB,EAAS,IAAIE,YAA4B,EAAhBiB,EAAIO,WAC7Ba,EAAkB,IAAInC,aAAaJ,GAEhClF,EAAI,EAAGA,EAAIqG,EAAIO,UAAW5G,IACjCyH,EAAgBzH,GAAK,EAGvBqG,EAAIC,iBAAiBpE,EAAmBiB,gBAAkB,CACxD+B,OAAM,EACNwC,UAAW9E,EAAiBO,gBAxB5BwE,CAA6BtB,GAG/B,IAAMuB,EAAU,CACd1C,OAAQA,EACRuB,KAAMJ,EAAII,KACVH,iBAAkBD,EAAIC,iBACtBuB,iBAAkB,CAAEC,IAAKzB,EAAIa,YAAaa,IAAK1B,EAAIU,aACnDO,QAAO,GAGTU,YAAYJ,EAASvB,EAAIe,eAiB3B,SAASC,EAAsBK,EAA4BrB,GACzD,IAAM4B,EASR,SAA8BP,EAA4BrB,GACxD,OAAQqB,EAAUnH,MAChB,KAAK2B,EAAmBW,mBACtB,OAkBN,SAAiC6E,EAA4BrB,GAI3D,IAHA,IAAMnB,EAAS,IAAIE,YAA4B,EAAhBiB,EAAIO,UAAgB,GAC7CsB,EAAY,IAAI5C,aAAaJ,GAE1BlF,EAAI,EAAGA,EAAIqG,EAAIO,UAAW5G,IAAK,CACtC,IAAIiG,OAAC,EACDkC,OAAC,EACDC,OAAC,EAED/B,EAAIhC,QAAQQ,UAAU,QACxBoB,EAAII,EAAIF,KAAKT,UAAUW,EAAIE,cAAgBvG,EAAIqG,EAAID,gBAAgB3D,SAAW,GAAK4D,EAAIS,MACvFqB,EAAI9B,EAAIF,KAAKT,UAAUW,EAAIE,cAAgBvG,EAAIqG,EAAID,gBAAgB3D,SAAW,GAAK4D,EAAIS,MACvFsB,EAAI/B,EAAIF,KAAKT,UAAUW,EAAIE,cAAgBvG,EAAIqG,EAAID,gBAAgB3D,SAAW,GAAK4D,EAAIS,QAEvFb,EAAII,EAAIF,KAAKP,WAAW5F,EAAIqG,EAAID,gBAAgB3D,SAAW,GAAK4D,EAAIK,WAAW,GAC/EyB,EAAI9B,EAAIF,KAAKP,WAAW5F,EAAIqG,EAAID,gBAAgB3D,SAAW,GAAK4D,EAAIK,WAAW,GAC/E0B,EAAI/B,EAAIF,KAAKP,WAAW5F,EAAIqG,EAAID,gBAAgB3D,SAAW,GAAK4D,EAAIK,WAAW,IAGjFwB,EAAU,EAAIlI,EAAI,GAAKiG,EACvBiC,EAAU,EAAIlI,EAAI,GAAKmI,EACvBD,EAAU,EAAIlI,EAAI,GAAKoI,EAEvB/B,EAAII,KAAK,IAAMR,EAAII,EAAIO,UACvBP,EAAII,KAAK,IAAM0B,EAAI9B,EAAIO,UACvBP,EAAII,KAAK,IAAM2B,EAAI/B,EAAIO,UAEvBP,EAAIa,YAAY,GAAKnB,KAAK+B,IAAIzB,EAAIa,YAAY,GAAIjB,GAClDI,EAAIa,YAAY,GAAKnB,KAAK+B,IAAIzB,EAAIa,YAAY,GAAIiB,GAClD9B,EAAIa,YAAY,GAAKnB,KAAK+B,IAAIzB,EAAIa,YAAY,GAAIkB,GAElD/B,EAAIU,YAAY,GAAKhB,KAAKgC,IAAI1B,EAAIU,YAAY,GAAId,GAClDI,EAAIU,YAAY,GAAKhB,KAAKgC,IAAI1B,EAAIU,YAAY,GAAIoB,GAClD9B,EAAIU,YAAY,GAAKhB,KAAKgC,IAAI1B,EAAIU,YAAY,GAAIqB,GAGpD,MAAO,CAAElD,OAAM,EAAEwC,UAAS,GAtDfW,CAAwBX,EAAWrB,GAC5C,KAAKnE,EAAmBS,aACtB,OAuDN,SAAqB+E,EAA4BrB,GAI/C,IAHA,IAAMnB,EAAS,IAAIE,YAA4B,EAAhBiB,EAAIO,WAC7B0B,EAAS,IAAI9C,WAAWN,GAErBlF,EAAI,EAAGA,EAAIqG,EAAIO,UAAW5G,IACjCsI,EAAO,EAAItI,EAAI,GAAKqG,EAAIF,KAAKN,SAASQ,EAAIE,cAAgBvG,EAAIqG,EAAID,gBAAgB3D,SAAW,GAC7F6F,EAAO,EAAItI,EAAI,GAAKqG,EAAIF,KAAKN,SAASQ,EAAIE,cAAgBvG,EAAIqG,EAAID,gBAAgB3D,SAAW,GAC7F6F,EAAO,EAAItI,EAAI,GAAKqG,EAAIF,KAAKN,SAASQ,EAAIE,cAAgBvG,EAAIqG,EAAID,gBAAgB3D,SAAW,GAG/F,MAAO,CAAEyC,OAAM,EAAEwC,UAAS,GAjEfa,CAAYb,EAAWrB,GAChC,KAAKnE,EAAmBgB,UACtB,OAkEN,SAAyBwE,EAA4BrB,GAInD,IAHA,IAAMnB,EAAS,IAAIE,YAA4B,EAAhBiB,EAAIO,WAC7B4B,EAAc,IAAIlD,aAAaJ,GAE5BlF,EAAI,EAAGA,EAAIqG,EAAIO,UAAW5G,IACjCwI,EAAYxI,GAAKqG,EAAIF,KAAKR,UAAUU,EAAIE,cAAgBvG,EAAIqG,EAAID,gBAAgB3D,UAGlF,MAAO,CAAEyC,OAAM,EAAEwC,UAAS,GA1Efe,CAAgBf,EAAWrB,GACpC,KAAKnE,EAAmBiB,eACtB,OA2EN,SAA8BuE,EAA4BrB,GAIxD,IAHA,IAAMnB,EAAS,IAAIE,YAAYiB,EAAIO,WAC7Ba,EAAkB,IAAIjC,WAAWN,GAE9BwD,EAAI,EAAGA,EAAIrC,EAAIO,UAAW8B,IACjCjB,EAAgBiB,GAAKrC,EAAIF,KAAKN,SAASQ,EAAIE,cAAgBmC,EAAIrC,EAAID,gBAAgB3D,UAGrF,MAAO,CAAEyC,OAAM,EAAEwC,UAAS,GAnFfiB,CAAqBjB,EAAWrB,GACzC,KAAKnE,EAAmBkB,oBACtB,OAoFN,SAAkCsE,EAA4BrB,GAI5D,IAHA,IAAMnB,EAAS,IAAIE,YAA4B,EAAhBiB,EAAIO,UAAgB,GAC7CgC,EAAU,IAAItD,aAAaJ,GAExBwD,EAAI,EAAGA,EAAIrC,EAAIO,UAAW8B,IAAK,CACtC,IAAMG,EAAKxC,EAAIF,KAAKN,SAASQ,EAAIE,cAAgBmC,EAAIrC,EAAID,gBAAgB3D,SAAW,GAC9EqG,EAAKzC,EAAIF,KAAKN,SAASQ,EAAIE,cAAgBmC,EAAIrC,EAAID,gBAAgB3D,SAAW,GAKhFsG,EAAU,GAHHF,EAAK,KAGE,EACdG,EAAU,GAHHF,EAAK,KAGE,EACdG,EAAK,EAGHhJ,EAAI8I,GAAMA,EAAKC,GAAMA,EAAU,EAALC,EAChCA,EAAKhJ,EACL8I,GAAUhD,KAAKmD,KAAKjJ,GACpB+I,GAAUjD,KAAKmD,KAAKjJ,GAEpB8I,GAAU,EACVC,GAAU,EACVC,EAAU,EAALA,EAAS,EAEdL,EAAQ,EAAIF,EAAI,GAAKK,EACrBH,EAAQ,EAAIF,EAAI,GAAKM,EACrBJ,EAAQ,EAAIF,EAAI,GAAKO,EAGvB,MAAO,CAAE/D,OAAM,EAAEwC,UAAS,GAlHfyB,CAAyBzB,EAAWrB,GAC7C,KAAKnE,EAAmBmB,aACtB,OAmHN,SAA2BqE,EAA4BrB,GAIrD,IAHA,IAAM+C,EAAO,IAAIhE,YAA4B,EAAhBiB,EAAIO,UAAgB,GAC3CgC,EAAU,IAAItD,aAAa8D,GAExBV,EAAI,EAAGA,EAAIrC,EAAIO,UAAW8B,IAAK,CACtC,IAAMG,EAAKxC,EAAIF,KAAKN,SAASQ,EAAIE,cAAgBmC,EAAIrC,EAAID,gBAAgB3D,SAAW,GAC9EqG,EAAKzC,EAAIF,KAAKN,SAASQ,EAAIE,cAAgBmC,EAAIrC,EAAID,gBAAgB3D,SAAW,GAE9E4G,EAAKR,EAAK,IAAO,EAAI,EACrB/D,EAAKgE,EAAK,IAAO,EAAI,EAEvBV,EAAI,EAAIrC,KAAKuD,IAAID,GAAKtD,KAAKuD,IAAIxE,GAE/BmB,EAAI,EACJkC,EAAI,EACJC,GAAK,GACPnC,EAAIoD,EACJlB,EAAIrD,IAEJmB,IAAMnB,EAAIgB,EAAShB,GAAK,GAAKgB,EAASuD,GACtClB,IAAMkB,EAAIvD,EAASuD,GAAK,GAAKvD,EAAShB,IAGxC,IAAM,EAASiB,KAAKmD,KAAKjD,EAAIA,EAAIkC,EAAIA,EAAIC,EAAIA,GAC7CnC,GAAQ,EACRkC,GAAQ,EACRC,GAAQ,EAERQ,EAAQ,EAAIF,EAAI,GAAKzC,EACrB2C,EAAQ,EAAIF,EAAI,GAAKP,EACrBS,EAAQ,EAAIF,EAAI,GAAKN,EAGvB,MAAO,CAAElD,OAAQkE,EAAM1B,UAAS,GApJrB6B,CAAkB7B,EAAWrB,GACtC,KAAKnE,EAAmBoB,OACtB,OAqJN,SAAsBoE,EAA4BrB,GAIhD,IAHA,IAAMnB,EAAS,IAAIE,YAA4B,EAAhBiB,EAAIO,UAAgB,GAC7CgC,EAAU,IAAItD,aAAaJ,GAExBwD,EAAI,EAAGA,EAAIrC,EAAIO,UAAW8B,IAAK,CACtC,IAAMzC,EAAII,EAAIF,KAAKP,WAAWS,EAAIE,cAAgBmC,EAAIrC,EAAID,gBAAgB3D,SAAW,GAC/E0F,EAAI9B,EAAIF,KAAKP,WAAWS,EAAIE,cAAgBmC,EAAIrC,EAAID,gBAAgB3D,SAAW,GAC/E2F,EAAI/B,EAAIF,KAAKP,WAAWS,EAAIE,cAAgBmC,EAAIrC,EAAID,gBAAgB3D,SAAW,GAErFmG,EAAQ,EAAIF,EAAI,GAAKzC,EACrB2C,EAAQ,EAAIF,EAAI,GAAKP,EACrBS,EAAQ,EAAIF,EAAI,GAAKN,EAGvB,MAAO,CAAElD,OAAM,EAAEwC,UAAS,GAnKf8B,CAAa9B,EAAWrB,GACjC,QACE,QA1BqBoD,CAAqB/B,EAAWrB,QAChCrC,IAArBiE,IAIJ5B,EAAIC,iBAAiB2B,EAAiBP,UAAUnH,MAAQ0H,EACxD5B,EAAIe,cAAcvD,KAAKoE,EAAiB/C","file":"d970e95d7eebd73400d0.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { handleMessage } from './binary-decoder-worker-internal';\n\n/*eslint-disable */\nonmessage = handleMessage;\n","// -------------------------------------------------------------------------------------------------\n// Converted to Typescript and adapted from https://github.com/potree/potree\n// -------------------------------------------------------------------------------------------------\n\nexport enum PointAttributeName {\n  POSITION_CARTESIAN = 0, // float x, y, z;\n  COLOR_PACKED = 1, // byte r, g, b, a; \tI = [0,1]\n  COLOR_FLOATS_1 = 2, // float r, g, b; \t\tI = [0,1]\n  COLOR_FLOATS_255 = 3, // float r, g, b; \t\tI = [0,255]\n  NORMAL_FLOATS = 4, // float x, y, z;\n  FILLER = 5,\n  INTENSITY = 6,\n  CLASSIFICATION = 7,\n  NORMAL_SPHEREMAPPED = 8,\n  NORMAL_OCT16 = 9,\n  NORMAL = 10,\n}\n\nexport interface PointAttributeType {\n  ordinal: number;\n  size: number;\n}\n\nexport const POINT_ATTRIBUTE_TYPES: Record<string, PointAttributeType> = {\n  DATA_TYPE_DOUBLE: { ordinal: 0, size: 8 },\n  DATA_TYPE_FLOAT: { ordinal: 1, size: 4 },\n  DATA_TYPE_INT8: { ordinal: 2, size: 1 },\n  DATA_TYPE_UINT8: { ordinal: 3, size: 1 },\n  DATA_TYPE_INT16: { ordinal: 4, size: 2 },\n  DATA_TYPE_UINT16: { ordinal: 5, size: 2 },\n  DATA_TYPE_INT32: { ordinal: 6, size: 4 },\n  DATA_TYPE_UINT32: { ordinal: 7, size: 4 },\n  DATA_TYPE_INT64: { ordinal: 8, size: 8 },\n  DATA_TYPE_UINT64: { ordinal: 9, size: 8 },\n};\n\nexport interface IPointAttribute {\n  name: PointAttributeName;\n  type: PointAttributeType;\n  numElements: number;\n  byteSize: number;\n}\n\nexport interface IPointAttributes {\n  attributes: IPointAttribute[];\n  byteSize: number;\n  size: number;\n}\n\nfunction makePointAttribute(\n  name: PointAttributeName,\n  type: PointAttributeType,\n  numElements: number,\n): IPointAttribute {\n  return {\n    name,\n    type,\n    numElements,\n    byteSize: numElements * type.size,\n  };\n}\n\nconst RGBA_PACKED = makePointAttribute(\n  PointAttributeName.COLOR_PACKED,\n  POINT_ATTRIBUTE_TYPES.DATA_TYPE_INT8,\n  4,\n);\n\nexport const POINT_ATTRIBUTES = {\n  POSITION_CARTESIAN: makePointAttribute(\n    PointAttributeName.POSITION_CARTESIAN,\n    POINT_ATTRIBUTE_TYPES.DATA_TYPE_FLOAT,\n    3,\n  ),\n  RGBA_PACKED,\n  COLOR_PACKED: RGBA_PACKED,\n  RGB_PACKED: makePointAttribute(\n    PointAttributeName.COLOR_PACKED,\n    POINT_ATTRIBUTE_TYPES.DATA_TYPE_INT8,\n    3,\n  ),\n  NORMAL_FLOATS: makePointAttribute(\n    PointAttributeName.NORMAL_FLOATS,\n    POINT_ATTRIBUTE_TYPES.DATA_TYPE_FLOAT,\n    3,\n  ),\n  FILLER_1B: makePointAttribute(\n    PointAttributeName.FILLER,\n    POINT_ATTRIBUTE_TYPES.DATA_TYPE_UINT8,\n    1,\n  ),\n  INTENSITY: makePointAttribute(\n    PointAttributeName.INTENSITY,\n    POINT_ATTRIBUTE_TYPES.DATA_TYPE_UINT16,\n    1,\n  ),\n  CLASSIFICATION: makePointAttribute(\n    PointAttributeName.CLASSIFICATION,\n    POINT_ATTRIBUTE_TYPES.DATA_TYPE_UINT8,\n    1,\n  ),\n  NORMAL_SPHEREMAPPED: makePointAttribute(\n    PointAttributeName.NORMAL_SPHEREMAPPED,\n    POINT_ATTRIBUTE_TYPES.DATA_TYPE_UINT8,\n    2,\n  ),\n  NORMAL_OCT16: makePointAttribute(\n    PointAttributeName.NORMAL_OCT16,\n    POINT_ATTRIBUTE_TYPES.DATA_TYPE_UINT8,\n    2,\n  ),\n  NORMAL: makePointAttribute(PointAttributeName.NORMAL, POINT_ATTRIBUTE_TYPES.DATA_TYPE_FLOAT, 3),\n};\n\nexport type PointAttributeStringName = keyof typeof POINT_ATTRIBUTES;\n\nexport class PointAttributes implements IPointAttributes {\n  attributes: IPointAttribute[] = [];\n  byteSize: number = 0;\n  size: number = 0;\n\n  constructor(pointAttributeNames: PointAttributeStringName[] = []) {\n    for (let i = 0; i < pointAttributeNames.length; i++) {\n      const pointAttributeName = pointAttributeNames[i];\n      const pointAttribute = POINT_ATTRIBUTES[pointAttributeName];\n      this.attributes.push(pointAttribute);\n      this.byteSize += pointAttribute.byteSize;\n      this.size++;\n    }\n  }\n\n  add(pointAttribute: IPointAttribute): void {\n    this.attributes.push(pointAttribute);\n    this.byteSize += pointAttribute.byteSize;\n    this.size++;\n  }\n\n  hasColors(): boolean {\n    return this.attributes.find(isColorAttribute) !== undefined;\n  }\n\n  hasNormals(): boolean {\n    return this.attributes.find(isNormalAttribute) !== undefined;\n  }\n}\n\nfunction isColorAttribute({ name }: IPointAttribute): boolean {\n  return name === PointAttributeName.COLOR_PACKED;\n}\n\nfunction isNormalAttribute({ name }: IPointAttribute): boolean {\n  return (\n    name === PointAttributeName.NORMAL_SPHEREMAPPED ||\n    name === PointAttributeName.NORMAL_FLOATS ||\n    name === PointAttributeName.NORMAL ||\n    name === PointAttributeName.NORMAL_OCT16\n  );\n}\n","export class Version {\n  version: string;\n  versionMajor: number;\n  versionMinor: number = 0;\n\n  constructor(version: string) {\n    this.version = version;\n\n    const vmLength = version.indexOf('.') === -1 ? version.length : version.indexOf('.');\n    this.versionMajor = parseInt(version.substr(0, vmLength), 10);\n    this.versionMinor = parseInt(version.substr(vmLength + 1), 10);\n    if (isNaN(this.versionMinor)) {\n      this.versionMinor = 0;\n    }\n  }\n\n  newerThan(version: string): boolean {\n    const v = new Version(version);\n\n    if (this.versionMajor > v.versionMajor) {\n      return true;\n    } else if (this.versionMajor === v.versionMajor && this.versionMinor > v.versionMinor) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  equalOrHigher(version: string): boolean {\n    const v = new Version(version);\n\n    if (this.versionMajor > v.versionMajor) {\n      return true;\n    } else if (this.versionMajor === v.versionMajor && this.versionMinor >= v.versionMinor) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  upTo(version: string): boolean {\n    return !this.newerThan(version);\n  }\n}\n","/**\n * Adapted from Potree.js http://potree.org\n * Potree License: https://github.com/potree/potree/blob/1.5/LICENSE\n */\n\n// http://jsperf.com/uint8array-vs-dataview3/3\n// tslint:disable:no-bitwise\nexport class CustomArrayView {\n  private u8: Uint8Array;\n  private tmp = new ArrayBuffer(4);\n  private tmpf = new Float32Array(this.tmp);\n  private tmpu8 = new Uint8Array(this.tmp);\n\n  constructor(buffer: ArrayBuffer) {\n    this.u8 = new Uint8Array(buffer);\n  }\n\n  getUint32(i: number) {\n    return (this.u8[i + 3] << 24) | (this.u8[i + 2] << 16) | (this.u8[i + 1] << 8) | this.u8[i];\n  }\n\n  getUint16(i: number): number {\n    return (this.u8[i + 1] << 8) | this.u8[i];\n  }\n\n  getFloat32(i: number): number {\n    const tmpu8 = this.tmpu8;\n    const u8 = this.u8;\n    const tmpf = this.tmpf;\n\n    tmpu8[0] = u8[i + 0];\n    tmpu8[1] = u8[i + 1];\n    tmpu8[2] = u8[i + 2];\n    tmpu8[3] = u8[i + 3];\n\n    return tmpf[0];\n  }\n\n  getUint8(i: number): number {\n    return this.u8[i];\n  }\n}\n// tslint:enable:no-bitwise\n","/**\n * Adapted from Potree.js http://potree.org\n * Potree License: https://github.com/potree/potree/blob/1.5/LICENSE\n */\n\nimport {\n  IPointAttribute,\n  IPointAttributes,\n  POINT_ATTRIBUTES,\n  PointAttributeName,\n} from '../point-attributes';\nimport { Version } from '../version';\nimport { CustomArrayView } from './custom-array-view';\n\n// IE11 does not have Math.sign(), this has been adapted from CoreJS es6.math.sign.js for TypeScript\nconst mathSign =\n  Math.sign ||\n  function(x: number): number {\n    // tslint:disable-next-line:triple-equals\n    return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;\n  };\n\ninterface DecodedAttribute {\n  buffer: ArrayBuffer;\n  attribute: IPointAttribute;\n}\n\ninterface Ctx {\n  attributeBuffers: Record<string, DecodedAttribute>;\n  currentOffset: number;\n  data: CustomArrayView;\n  mean: [number, number, number];\n  nodeOffset: [number, number, number];\n  numPoints: number;\n  pointAttributes: IPointAttributes;\n  scale: number;\n  tightBoxMax: [number, number, number];\n  tightBoxMin: [number, number, number];\n  transferables: ArrayBuffer[];\n  version: Version;\n}\n\nexport function handleMessage(event: MessageEvent) {\n  const buffer = event.data.buffer;\n  const pointAttributes: IPointAttributes = event.data.pointAttributes;\n\n  const ctx: Ctx = {\n    attributeBuffers: {},\n    currentOffset: 0,\n    data: new CustomArrayView(buffer),\n    mean: [0, 0, 0],\n    nodeOffset: event.data.offset,\n    numPoints: event.data.buffer.byteLength / pointAttributes.byteSize,\n    pointAttributes,\n    scale: event.data.scale,\n    tightBoxMax: [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY],\n    tightBoxMin: [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY],\n    transferables: [],\n    version: new Version(event.data.version),\n  };\n\n  for (const pointAttribute of ctx.pointAttributes.attributes) {\n    decodeAndAddAttribute(pointAttribute, ctx);\n    ctx.currentOffset += pointAttribute.byteSize;\n  }\n\n  const indices = new ArrayBuffer(ctx.numPoints * 4);\n  const iIndices = new Uint32Array(indices);\n  for (let i = 0; i < ctx.numPoints; i++) {\n    iIndices[i] = i;\n  }\n\n  if (!ctx.attributeBuffers[PointAttributeName.CLASSIFICATION]) {\n    addEmptyClassificationBuffer(ctx);\n  }\n\n  const message = {\n    buffer: buffer,\n    mean: ctx.mean,\n    attributeBuffers: ctx.attributeBuffers,\n    tightBoundingBox: { min: ctx.tightBoxMin, max: ctx.tightBoxMax },\n    indices,\n  };\n\n  postMessage(message, ctx.transferables as any);\n}\n\nfunction addEmptyClassificationBuffer(ctx: Ctx): void {\n  const buffer = new ArrayBuffer(ctx.numPoints * 4);\n  const classifications = new Float32Array(buffer);\n\n  for (let i = 0; i < ctx.numPoints; i++) {\n    classifications[i] = 0;\n  }\n\n  ctx.attributeBuffers[PointAttributeName.CLASSIFICATION] = {\n    buffer,\n    attribute: POINT_ATTRIBUTES.CLASSIFICATION,\n  };\n}\n\nfunction decodeAndAddAttribute(attribute: IPointAttribute, ctx: Ctx): void {\n  const decodedAttribute = decodePointAttribute(attribute, ctx);\n  if (decodedAttribute === undefined) {\n    return;\n  }\n\n  ctx.attributeBuffers[decodedAttribute.attribute.name] = decodedAttribute;\n  ctx.transferables.push(decodedAttribute.buffer);\n}\n\nfunction decodePointAttribute(attribute: IPointAttribute, ctx: Ctx): DecodedAttribute | undefined {\n  switch (attribute.name) {\n    case PointAttributeName.POSITION_CARTESIAN:\n      return decodePositionCartesian(attribute, ctx);\n    case PointAttributeName.COLOR_PACKED:\n      return decodeColor(attribute, ctx);\n    case PointAttributeName.INTENSITY:\n      return decodeIntensity(attribute, ctx);\n    case PointAttributeName.CLASSIFICATION:\n      return decodeClassification(attribute, ctx);\n    case PointAttributeName.NORMAL_SPHEREMAPPED:\n      return decodeNormalSphereMapped(attribute, ctx);\n    case PointAttributeName.NORMAL_OCT16:\n      return decodeNormalOct16(attribute, ctx);\n    case PointAttributeName.NORMAL:\n      return decodeNormal(attribute, ctx);\n    default:\n      return undefined;\n  }\n}\n\nfunction decodePositionCartesian(attribute: IPointAttribute, ctx: Ctx): DecodedAttribute {\n  const buffer = new ArrayBuffer(ctx.numPoints * 4 * 3);\n  const positions = new Float32Array(buffer);\n\n  for (let i = 0; i < ctx.numPoints; i++) {\n    let x;\n    let y;\n    let z;\n\n    if (ctx.version.newerThan('1.3')) {\n      x = ctx.data.getUint32(ctx.currentOffset + i * ctx.pointAttributes.byteSize + 0) * ctx.scale;\n      y = ctx.data.getUint32(ctx.currentOffset + i * ctx.pointAttributes.byteSize + 4) * ctx.scale;\n      z = ctx.data.getUint32(ctx.currentOffset + i * ctx.pointAttributes.byteSize + 8) * ctx.scale;\n    } else {\n      x = ctx.data.getFloat32(i * ctx.pointAttributes.byteSize + 0) + ctx.nodeOffset[0];\n      y = ctx.data.getFloat32(i * ctx.pointAttributes.byteSize + 4) + ctx.nodeOffset[1];\n      z = ctx.data.getFloat32(i * ctx.pointAttributes.byteSize + 8) + ctx.nodeOffset[2];\n    }\n\n    positions[3 * i + 0] = x;\n    positions[3 * i + 1] = y;\n    positions[3 * i + 2] = z;\n\n    ctx.mean[0] += x / ctx.numPoints;\n    ctx.mean[1] += y / ctx.numPoints;\n    ctx.mean[2] += z / ctx.numPoints;\n\n    ctx.tightBoxMin[0] = Math.min(ctx.tightBoxMin[0], x);\n    ctx.tightBoxMin[1] = Math.min(ctx.tightBoxMin[1], y);\n    ctx.tightBoxMin[2] = Math.min(ctx.tightBoxMin[2], z);\n\n    ctx.tightBoxMax[0] = Math.max(ctx.tightBoxMax[0], x);\n    ctx.tightBoxMax[1] = Math.max(ctx.tightBoxMax[1], y);\n    ctx.tightBoxMax[2] = Math.max(ctx.tightBoxMax[2], z);\n  }\n\n  return { buffer, attribute };\n}\n\nfunction decodeColor(attribute: IPointAttribute, ctx: Ctx): DecodedAttribute {\n  const buffer = new ArrayBuffer(ctx.numPoints * 3);\n  const colors = new Uint8Array(buffer);\n\n  for (let i = 0; i < ctx.numPoints; i++) {\n    colors[3 * i + 0] = ctx.data.getUint8(ctx.currentOffset + i * ctx.pointAttributes.byteSize + 0);\n    colors[3 * i + 1] = ctx.data.getUint8(ctx.currentOffset + i * ctx.pointAttributes.byteSize + 1);\n    colors[3 * i + 2] = ctx.data.getUint8(ctx.currentOffset + i * ctx.pointAttributes.byteSize + 2);\n  }\n\n  return { buffer, attribute };\n}\n\nfunction decodeIntensity(attribute: IPointAttribute, ctx: Ctx): DecodedAttribute {\n  const buffer = new ArrayBuffer(ctx.numPoints * 4);\n  const intensities = new Float32Array(buffer);\n\n  for (let i = 0; i < ctx.numPoints; i++) {\n    intensities[i] = ctx.data.getUint16(ctx.currentOffset + i * ctx.pointAttributes.byteSize);\n  }\n\n  return { buffer, attribute };\n}\n\nfunction decodeClassification(attribute: IPointAttribute, ctx: Ctx): DecodedAttribute {\n  const buffer = new ArrayBuffer(ctx.numPoints);\n  const classifications = new Uint8Array(buffer);\n\n  for (let j = 0; j < ctx.numPoints; j++) {\n    classifications[j] = ctx.data.getUint8(ctx.currentOffset + j * ctx.pointAttributes.byteSize);\n  }\n\n  return { buffer, attribute };\n}\n\nfunction decodeNormalSphereMapped(attribute: IPointAttribute, ctx: Ctx): DecodedAttribute {\n  const buffer = new ArrayBuffer(ctx.numPoints * 4 * 3);\n  const normals = new Float32Array(buffer);\n\n  for (let j = 0; j < ctx.numPoints; j++) {\n    const bx = ctx.data.getUint8(ctx.currentOffset + j * ctx.pointAttributes.byteSize + 0);\n    const by = ctx.data.getUint8(ctx.currentOffset + j * ctx.pointAttributes.byteSize + 1);\n\n    const ex = bx / 255;\n    const ey = by / 255;\n\n    let nx = ex * 2 - 1;\n    let ny = ey * 2 - 1;\n    let nz = 1;\n    const nw = -1;\n\n    const l = nx * -nx + ny * -ny + nz * -nw;\n    nz = l;\n    nx = nx * Math.sqrt(l);\n    ny = ny * Math.sqrt(l);\n\n    nx = nx * 2;\n    ny = ny * 2;\n    nz = nz * 2 - 1;\n\n    normals[3 * j + 0] = nx;\n    normals[3 * j + 1] = ny;\n    normals[3 * j + 2] = nz;\n  }\n\n  return { buffer, attribute };\n}\n\nfunction decodeNormalOct16(attribute: IPointAttribute, ctx: Ctx): DecodedAttribute {\n  const buff = new ArrayBuffer(ctx.numPoints * 4 * 3);\n  const normals = new Float32Array(buff);\n\n  for (let j = 0; j < ctx.numPoints; j++) {\n    const bx = ctx.data.getUint8(ctx.currentOffset + j * ctx.pointAttributes.byteSize + 0);\n    const by = ctx.data.getUint8(ctx.currentOffset + j * ctx.pointAttributes.byteSize + 1);\n\n    const u = (bx / 255) * 2 - 1;\n    const v = (by / 255) * 2 - 1;\n\n    let z = 1 - Math.abs(u) - Math.abs(v);\n\n    let x = 0;\n    let y = 0;\n    if (z >= 0) {\n      x = u;\n      y = v;\n    } else {\n      x = -(v / mathSign(v) - 1) / mathSign(u);\n      y = -(u / mathSign(u) - 1) / mathSign(v);\n    }\n\n    const length = Math.sqrt(x * x + y * y + z * z);\n    x = x / length;\n    y = y / length;\n    z = z / length;\n\n    normals[3 * j + 0] = x;\n    normals[3 * j + 1] = y;\n    normals[3 * j + 2] = z;\n  }\n\n  return { buffer: buff, attribute };\n}\n\nfunction decodeNormal(attribute: IPointAttribute, ctx: Ctx): DecodedAttribute {\n  const buffer = new ArrayBuffer(ctx.numPoints * 4 * 3);\n  const normals = new Float32Array(buffer);\n\n  for (let j = 0; j < ctx.numPoints; j++) {\n    const x = ctx.data.getFloat32(ctx.currentOffset + j * ctx.pointAttributes.byteSize + 0);\n    const y = ctx.data.getFloat32(ctx.currentOffset + j * ctx.pointAttributes.byteSize + 4);\n    const z = ctx.data.getFloat32(ctx.currentOffset + j * ctx.pointAttributes.byteSize + 8);\n\n    normals[3 * j + 0] = x;\n    normals[3 * j + 1] = y;\n    normals[3 * j + 2] = z;\n  }\n\n  return { buffer, attribute };\n}\n"],"sourceRoot":""}